services:
  broker:
    container_name: ${PROJECT_NAME}-broker
    image: rabbitmq:4-management-alpine
    restart: always
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${BROKER_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${BROKER_PASSWORD}
    ports:
      - ${BROKER_PORT}:5672
      - ${BROKER_MANAGEMENT_PORT}:15672
    volumes:
      - broker_data:/var/lib/rabbitmq
      - ${BROKER_CONFIG_PATH}:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 2

  flower:
    container_name: ${PROJECT_NAME}-flower
    image: mher/flower:2.0.1
    restart: always
    env_file:
      - .env
    ports:
      - ${FLOWER_PORT}:5555
    command: >
      celery
      --broker=pyamqp://${FLOWER_BROKER}:5672//
      flower
      --basic_auth=${FLOWER_USERNAME}:${FLOWER_PASSWORD}
      --broker_api=http://${FLOWER_BROKER}:15672/api/
    depends_on:
      broker:
        condition: service_healthy

  storage:
    container_name: ${PROJECT_NAME}-storage
    image: redis:alpine3.20
    restart: always
    env_file:
      - .env
    ports:
      - ${STORAGE_PORT}:6379
    volumes:
      - storage_data:/data
    command: >
      redis-server
      --requirepass ${STORAGE_PASSWORD}
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 2

  controller:
    container_name: ${PROJECT_NAME}-controller
    build: ${CONTROLLER_BUILD_PATH}
    restart: always
    env_file:
      - .env
      - ${CONTROLLER_ENV_PATH}
    ports:
      - ${CONTROLLER_PORT}:8000
    volumes:
      - ${SHARED_PATH}:/app/shared
    depends_on:
      broker:
        condition: service_healthy

  parser:
    container_name: ${PROJECT_NAME}-parser
    build: ${PARSER_BUILD_PATH}
    restart: always
    env_file:
      - .env
      - ${PARSER_ENV_PATH}
    volumes:
      - ${SHARED_PATH}:/app/shared
    depends_on:
      broker:
        condition: service_healthy

  scraper:
    container_name: ${PROJECT_NAME}-scraper
    build: ${SCRAPER_BUILD_PATH}
    restart: always
    env_file:
      - .env
      - ${SCRAPER_ENV_PATH}
    volumes:
      - ${SHARED_PATH}:/app/shared
    depends_on:
      broker:
        condition: service_healthy
      storage:
        condition: service_healthy

volumes:
  broker_data:
  storage_data:
